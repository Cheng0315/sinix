<div class="container-fluid show-project-padding">

  <div ><!-- Display delete and edit button if project belongs to user-->
    <%if project_belongs_to_user(params[:id])%>
      <form style="display: inline-block;" action="/projects/<%= @project.id %>/delete" method="POST">
        <input type="hidden" value="delete" id="hidden" name="_method">
        <button type="submit" class="btn btn-danger">Delete Project</button>
      </form>
      <form style="display: inline-block;" action="/projects/<%= @project.id %>/edit" method="get">
        <button type="submit" class="btn btn-warning">Edit Project</button>
      </form>
    <%end%>
  </div>

<!-- row that holds the code texts-->
  <div class="row">
<!-- Display the project in code texts, left column, folders and files-->
    <div class="col-lg-4">
      <pre >
        <code>
          <font color="white">
  app
    controllers
      application_controllers.rb
      <%=add_controllers(@models_hash)%>
    models
      <%=add_models(@models_hash)%>
    views
      <%=add_views_folders_and_files(@models_hash)%>
      index.erb
      layout.erb
  config
    environment.rb
  db
    migrate
      <%=create_migration_files(@models_hash)%>
  config.ru
  Gemfile
  Rakefile
</code>
</pre>
</div><!-- End of left column-->


<!-- Display the project in code texts, right column, codes-->
<div class="col-lg-6 col-lg-offset-2">
  <pre >
    <code>

              controllers

class ApplicationController < Sinatra::Base

end

<%=display_controller_classes(@models_hash)%>


              models

<%=display_model_classes(@models_hash)%>


              views

add your html/erb code in your erb files inside your views folder
add 'index.erb' on the first layer of your views folder
add 'layout.erb' on the first layer of your views folder

layout.erb
<pre><font color="white">
&lt;DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Sinix&lt;/title&gt;
  &lt;/head&gt;

  &lt;body&gt;
    <%%= yield %>
  &lt;/body&gt;
&lt;/html&gt;
  </font></pre>

              config/environment.rb

require 'bundler/setup'
Bundler.require

ActiveRecord::Base.establish_connection(
  :adapter => "sqlite3",
  :database => "db/development.sqlite"
)

require_all 'app'



              db/migrate

<%=display_migration_files(@models_hash)%>

              config.ru

require './config/environment'

if ActiveRecord::Migrator.needs_migration?
  raise 'Migrations are pending. Run `rake db:migrate` to resolve the issue.'
end

use Rack::MethodOverride
<%=use_controllers(@models_hash)%>
run ApplicationController



              Gemfile

source "https://rubygems.org"

gem 'sinatra'
gem 'activerecord', ">= 4.2.7.1", :require => 'active_record'
gem 'sinatra-activerecord', :require => 'sinatra/activerecord'
gem 'rake'
gem 'require_all'
gem 'sqlite3'
gem 'thin'
gem 'shotgun'
gem 'pry'
gem 'bcrypt'
gem 'tux'
gem 'rack-flash3'



              Rakefile

require_relative './config/environment'
require 'sinatra/activerecord/rake'

require "bundler/gem_tasks"
task :default => :spec
          </font>
        </code>
      </pre>
    </div><!-- End of right column-->
  </div><!-- row -->
</div><!-- container -->
